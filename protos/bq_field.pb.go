// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bq_field.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message containing options related to BigQuery schema generation
// and management via Protobuf.
type BigQueryFieldOptions struct {
	// Flag to specify that a field should be marked as 'REQUIRED' when
	// used to generate schema for BigQuery.
	Require bool `protobuf:"varint,1,opt,name=require,proto3" json:"require,omitempty"`
	// Optionally override whatever type is resolved by the schema
	// generator. This is useful, for example, to store epoch timestamps
	// with the underlying 'TIMESTAMP' type, when normally, they would
	// be structured as 'INTEGER' fields.
	TypeOverride string `protobuf:"bytes,2,opt,name=type_override,json=typeOverride,proto3" json:"type_override,omitempty"`
	// Optionally omit a field from BigQuery schema.
	Ignore bool `protobuf:"varint,3,opt,name=ignore,proto3" json:"ignore,omitempty"`
	// Set the description for a field in BigQuery schema.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Customize the name of the field in the BigQuery schema.
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigQueryFieldOptions) Reset()         { *m = BigQueryFieldOptions{} }
func (m *BigQueryFieldOptions) String() string { return proto.CompactTextString(m) }
func (*BigQueryFieldOptions) ProtoMessage()    {}
func (*BigQueryFieldOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_field_dc6f211fc7f8820a, []int{0}
}
func (m *BigQueryFieldOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigQueryFieldOptions.Unmarshal(m, b)
}
func (m *BigQueryFieldOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigQueryFieldOptions.Marshal(b, m, deterministic)
}
func (dst *BigQueryFieldOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigQueryFieldOptions.Merge(dst, src)
}
func (m *BigQueryFieldOptions) XXX_Size() int {
	return xxx_messageInfo_BigQueryFieldOptions.Size(m)
}
func (m *BigQueryFieldOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BigQueryFieldOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BigQueryFieldOptions proto.InternalMessageInfo

func (m *BigQueryFieldOptions) GetRequire() bool {
	if m != nil {
		return m.Require
	}
	return false
}

func (m *BigQueryFieldOptions) GetTypeOverride() string {
	if m != nil {
		return m.TypeOverride
	}
	return ""
}

func (m *BigQueryFieldOptions) GetIgnore() bool {
	if m != nil {
		return m.Ignore
	}
	return false
}

func (m *BigQueryFieldOptions) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BigQueryFieldOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

var E_Bigquery = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*BigQueryFieldOptions)(nil),
	Field:         1021,
	Name:          "gen_bq_schema.bigquery",
	Tag:           "bytes,1021,opt,name=bigquery",
	Filename:      "bq_field.proto",
}

func init() {
	proto.RegisterType((*BigQueryFieldOptions)(nil), "gen_bq_schema.BigQueryFieldOptions")
	proto.RegisterExtension(E_Bigquery)
}

func init() { proto.RegisterFile("bq_field.proto", fileDescriptor_bq_field_dc6f211fc7f8820a) }

var fileDescriptor_bq_field_dc6f211fc7f8820a = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x24, 0x5a, 0xdb, 0xb8, 0xb5, 0x1e, 0x16, 0x91, 0x45, 0x10, 0x16, 0x7b, 0xc9, 0x69, 0x0b,
	0x7a, 0xf3, 0xd8, 0x83, 0xd7, 0x62, 0x8e, 0x5e, 0x96, 0x6e, 0xf3, 0xba, 0x3e, 0x68, 0xf7, 0x25,
	0x2f, 0x89, 0xd0, 0xef, 0xf1, 0x3b, 0x05, 0xc9, 0xa6, 0x91, 0x0a, 0x3d, 0xed, 0xce, 0x0c, 0x33,
	0xcc, 0x3c, 0x71, 0xeb, 0x2a, 0xbb, 0x45, 0xd8, 0x15, 0xa6, 0x64, 0x6a, 0x48, 0xce, 0x3c, 0x04,
	0xeb, 0x2a, 0x5b, 0x6f, 0x3e, 0x61, 0xbf, 0x7e, 0xd0, 0x9e, 0xc8, 0xef, 0x60, 0x11, 0x45, 0xd7,
	0x6e, 0x17, 0x05, 0xd4, 0x1b, 0xc6, 0xb2, 0x21, 0xee, 0x0d, 0x4f, 0xdf, 0x89, 0xb8, 0x5b, 0xa2,
	0x7f, 0x6f, 0x81, 0x0f, 0x6f, 0x5d, 0xd0, 0xaa, 0x6c, 0x90, 0x42, 0x2d, 0x95, 0x98, 0x30, 0x54,
	0x2d, 0x32, 0xa8, 0x44, 0x27, 0x59, 0x9a, 0x0f, 0x50, 0xce, 0xc5, 0xac, 0x39, 0x94, 0x60, 0xe9,
	0x0b, 0x98, 0xb1, 0x00, 0x75, 0xa1, 0x93, 0xec, 0x3a, 0xbf, 0xe9, 0xc8, 0xd5, 0x91, 0x93, 0xf7,
	0x62, 0x8c, 0x3e, 0x10, 0x83, 0xba, 0x8c, 0xee, 0x23, 0x92, 0x5a, 0x4c, 0x87, 0x0e, 0x48, 0x41,
	0x8d, 0xa2, 0xf5, 0x94, 0x92, 0x52, 0x8c, 0xc2, 0x7a, 0x0f, 0xea, 0x2a, 0x4a, 0xf1, 0xff, 0x6a,
	0x45, 0xea, 0xd0, 0x57, 0x5d, 0x49, 0xf9, 0x68, 0xfa, 0x51, 0x66, 0x18, 0x65, 0x4e, 0x7b, 0xab,
	0x9f, 0x89, 0x4e, 0xb2, 0xe9, 0xf3, 0xdc, 0xfc, 0xbb, 0x84, 0x39, 0xb7, 0x31, 0xff, 0x0b, 0x5d,
	0xa6, 0x1f, 0xe3, 0x18, 0x57, 0xbb, 0xfe, 0x7d, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x61, 0x63,
	0x93, 0x6b, 0x5a, 0x01, 0x00, 0x00,
}
