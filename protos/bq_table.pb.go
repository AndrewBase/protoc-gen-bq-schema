// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bq_table.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BigQueryMessageOptions struct {
	// Description for a table in BigQuery.
	//
	// Note: this is not currently used as the generated schema does not
	// currently include any table descriptions.
	TableDescription string `protobuf:"bytes,1,opt,name=table_description,json=tableDescription,proto3" json:"table_description,omitempty"`
	// If true, BigQuery field names will default to a field's JSON name,
	// not its original/proto field name.
	UseJsonNames         bool     `protobuf:"varint,2,opt,name=use_json_names,json=useJsonNames,proto3" json:"use_json_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigQueryMessageOptions) Reset()         { *m = BigQueryMessageOptions{} }
func (m *BigQueryMessageOptions) String() string { return proto.CompactTextString(m) }
func (*BigQueryMessageOptions) ProtoMessage()    {}
func (*BigQueryMessageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_table_ee98b0876b4ca71a, []int{0}
}
func (m *BigQueryMessageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigQueryMessageOptions.Unmarshal(m, b)
}
func (m *BigQueryMessageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigQueryMessageOptions.Marshal(b, m, deterministic)
}
func (dst *BigQueryMessageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigQueryMessageOptions.Merge(dst, src)
}
func (m *BigQueryMessageOptions) XXX_Size() int {
	return xxx_messageInfo_BigQueryMessageOptions.Size(m)
}
func (m *BigQueryMessageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BigQueryMessageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BigQueryMessageOptions proto.InternalMessageInfo

func (m *BigQueryMessageOptions) GetTableDescription() string {
	if m != nil {
		return m.TableDescription
	}
	return ""
}

func (m *BigQueryMessageOptions) GetUseJsonNames() bool {
	if m != nil {
		return m.UseJsonNames
	}
	return false
}

var E_TableName = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         1021,
	Name:          "gen_bq_schema.table_name",
	Tag:           "bytes,1021,opt,name=table_name,json=tableName",
	Filename:      "bq_table.proto",
}

var E_TableDescription = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         1026,
	Name:          "gen_bq_schema.table_description",
	Tag:           "bytes,1026,opt,name=table_description,json=tableDescription",
	Filename:      "bq_table.proto",
}

var E_BigqueryOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*BigQueryMessageOptions)(nil),
	Field:         1027,
	Name:          "gen_bq_schema.bigquery_opts",
	Tag:           "bytes,1027,opt,name=bigquery_opts,json=bigqueryOpts",
	Filename:      "bq_table.proto",
}

func init() {
	proto.RegisterType((*BigQueryMessageOptions)(nil), "gen_bq_schema.BigQueryMessageOptions")
	proto.RegisterExtension(E_TableName)
	proto.RegisterExtension(E_TableDescription)
	proto.RegisterExtension(E_BigqueryOpts)
}

func init() { proto.RegisterFile("bq_table.proto", fileDescriptor_bq_table_ee98b0876b4ca71a) }

var fileDescriptor_bq_table_ee98b0876b4ca71a = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xe9, 0x0e, 0xda, 0xc5, 0x6d, 0x68, 0x0f, 0x52, 0xbc, 0x58, 0x44, 0x61, 0x20, 0x64,
	0xa0, 0xb7, 0x5e, 0x84, 0xe2, 0x49, 0xd0, 0xb1, 0x1e, 0xbd, 0x84, 0x66, 0x3e, 0x63, 0xb4, 0xcb,
	0x4b, 0xfb, 0xd2, 0x83, 0x57, 0xfd, 0xbb, 0x05, 0x49, 0x4a, 0x91, 0xe1, 0x60, 0xa7, 0xc0, 0x7b,
	0xf9, 0x7e, 0xef, 0xc7, 0xc7, 0x66, 0xb2, 0x11, 0xae, 0x92, 0x35, 0x70, 0xdb, 0xa2, 0xc3, 0x64,
	0xaa, 0xc0, 0x08, 0xd9, 0x08, 0x5a, 0xbf, 0xc1, 0xa6, 0x3a, 0xcb, 0x14, 0xa2, 0xaa, 0x61, 0x11,
	0x96, 0xb2, 0x7b, 0x5d, 0xbc, 0x00, 0xad, 0x5b, 0x6d, 0x1d, 0xb6, 0x7d, 0xe0, 0xe2, 0x83, 0x9d,
	0x16, 0x5a, 0xad, 0x3a, 0x68, 0x3f, 0x1f, 0x81, 0xa8, 0x52, 0xb0, 0xb4, 0x4e, 0xa3, 0xa1, 0xe4,
	0x9a, 0x9d, 0x04, 0xb2, 0x18, 0x32, 0x1a, 0x4d, 0x1a, 0x65, 0xd1, 0x7c, 0x5c, 0x1e, 0x87, 0xc5,
	0xfd, 0xdf, 0x3c, 0xb9, 0x64, 0xb3, 0x8e, 0x40, 0xbc, 0x13, 0x1a, 0x61, 0xaa, 0x0d, 0x50, 0x3a,
	0xca, 0xa2, 0x79, 0x5c, 0x4e, 0x3a, 0x82, 0x07, 0x42, 0xf3, 0xe4, 0x67, 0xf9, 0x1d, 0x63, 0x3d,
	0xd2, 0x7f, 0x49, 0xce, 0x79, 0x6f, 0xc7, 0x07, 0x3b, 0xbe, 0x6d, 0x90, 0xfe, 0x1c, 0x86, 0x6b,
	0xe3, 0x90, 0xf1, 0x84, 0x7c, 0xb5, 0xc3, 0x69, 0x3f, 0xe7, 0x2b, 0xf6, 0x9c, 0x62, 0x94, 0x46,
	0xff, 0xcd, 0xf3, 0x9a, 0x4d, 0xa5, 0x56, 0x8d, 0x2f, 0x40, 0xa0, 0x75, 0xb4, 0x1f, 0xf7, 0xed,
	0x71, 0x47, 0x37, 0x57, 0x7c, 0xab, 0x6b, 0xbe, 0xbb, 0xc6, 0x72, 0x32, 0xd0, 0x97, 0xd6, 0x51,
	0x11, 0x3f, 0x1f, 0x04, 0x2c, 0xc9, 0xfe, 0xbd, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xe5,
	0x28, 0x56, 0xc2, 0x01, 0x00, 0x00,
}
